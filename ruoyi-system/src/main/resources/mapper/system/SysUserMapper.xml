<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.SysUserMapper">

    <resultMap type="com.ruoyi.common.core.domain.entity.SysUser" id="SysUserResult">
        <id     property="userId"       column="user_id"      />
        <result property="deptId"       column="dept_id"      />
        <result property="userName"     column="user_name"    />
		<result property="nickName"     column="nick_name"    />
		<result property="company"     column="company"    />
		<result property="companyId"     column="company_id"    />
		<result property="userType"     column="user_type"    />
        <result property="email"        column="email"        />
        <result property="phoneNumber"  column="phone_number"  />
        <result property="sex"          column="sex"          />
        <result property="avatar"       column="avatar"       />
        <result property="password"     column="password"     />
        <result property="status"       column="status"       />
        <result property="delFlag"      column="del_flag"     />
        <result property="loginIp"      column="login_ip"     />
        <result property="loginDate"    column="login_date"   />
        <result property="createBy"     column="create_by"    />
        <result property="createTime"   column="create_time"  />
        <result property="updateBy"     column="update_by"    />
        <result property="updateTime"   column="update_time"  />
        <result property="remark"       column="remark"       />
        <association property="dept"    column="dept_id" resultMap="deptResult" />
        <collection  property="roles"   javaType="java.util.List" resultMap="RoleResult" />
    </resultMap>
	
    <resultMap id="deptResult" type="com.ruoyi.common.core.domain.entity.SysDept">
        <id     property="deptId"    column="dept_id"     />
        <result property="parentId"  column="parent_id"   />
        <result property="deptName"  column="dept_name"   />
        <result property="ancestors" column="ancestors"   />
        <result property="orderNum"  column="order_num"   />
        <result property="leader"    column="leader"      />
        <result property="status"    column="dept_status" />
    </resultMap>
	
    <resultMap id="RoleResult" type="com.ruoyi.common.core.domain.entity.SysRole">
        <id     property="roleId"       column="role_id"        />
        <result property="roleName"     column="role_name"      />
        <result property="roleKey"      column="role_key"       />
        <result property="roleSort"     column="role_sort"      />
        <result property="dataScope"     column="data_scope"    />
        <result property="status"       column="role_status"    />
    </resultMap>
	
	<sql id="selectUserVo">
        SELECT u.user_id, u.dept_id, u.user_name, u.nick_name, u.email, u.avatar, u.phone_number, u.password, u.sex, u.status, u.del_flag,
               u.login_ip, u.login_date, u.create_by, u.create_time, u.remark, d.dept_id, d.parent_id, d.ancestors, d.dept_name, d.order_num,
               d.leader, d.status as dept_status, r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.status AS role_status,
               u.user_type, u.company, u.company_id
        FROM sys_user u
		LEFT JOIN sys_dept d ON u.dept_id = d.dept_id
		LEFT JOIN sys_user_role ur ON u.user_id = ur.user_id
		LEFT JOIN sys_role r ON r.role_id = ur.role_id
    </sql>
    
    <select id="selectUserList" parameterType="com.ruoyi.common.core.domain.entity.SysUser" resultMap="SysUserResult">
		SELECT u.user_id, u.dept_id, u.nick_name, u.user_name, u.email, u.avatar, u.phone_number, u.sex, u.status, u.del_flag, u.login_ip,
		       u.login_date, u.create_by, u.create_time, u.remark, u.user_type, u.company, u.company_id,  d.dept_name, d.leader
		FROM sys_user u
		LEFT JOIN sys_dept d ON u.dept_id = d.dept_id
		WHERE u.del_flag = '0'
		<if test="userId != null and userId != 0">
			AND u.user_id = #{userId}
		</if>
		<if test="userName != null and userName != ''">
			AND u.user_name LIKE CONCAT('%', #{userName}::TEXT, '%')
		</if>
		<if test="status != null and status != ''">
			AND u.status = #{status}
		</if>
		<if test="phoneNumber != null and phoneNumber != ''">
			AND u.phone_number LIKE CONCAT('%', #{phoneNumber}::TEXT, '%')
		</if>
		<if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
			AND u.create_time &gt;= TO_TIMESTAMP(#{params.beginTime}, 'yyyy-mm-dd HH24:MI:SS')
		</if>
		<if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
			AND u.create_time &lt;= TO_TIMESTAMP(#{params.endTime}, 'yyyy-mm-dd HH24:MI:SS')
		</if>
		<if test="deptId != null and deptId != 0">
			AND (u.dept_id = #{deptId} OR u.dept_id IN ( SELECT t.dept_id FROM sys_dept t WHERE FIND_IN_SET(#{deptId}, ancestors) ))
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>
	
	<select id="selectAllocatedList" parameterType="com.ruoyi.common.core.domain.entity.SysUser" resultMap="SysUserResult">
	    SELECT DISTINCT u.user_id, u.dept_id, u.user_name, u.nick_name, u.email, u.phone_number, u.status, u.create_time, u.user_type, u.company, u.company_id
	    FROM sys_user u
		LEFT JOIN sys_dept d ON u.dept_id = d.dept_id
		LEFT JOIN sys_user_role ur ON u.user_id = ur.user_id
		LEFT JOIN sys_role r ON r.role_id = ur.role_id
	    WHERE u.del_flag = '0' AND r.role_id = #{roleId}
	    <if test="userName != null and userName != ''">
			AND u.user_name LIKE CONCAT('%', #{userName}::TEXT, '%')
		</if>
		<if test="phoneNumber != null and phoneNumber != ''">
			AND u.phone_number LIKE CONCAT('%', #{phoneNumber}::TEXT, '%')
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>
	
	<select id="selectUnallocatedList" parameterType="com.ruoyi.common.core.domain.entity.SysUser" resultMap="SysUserResult">
	    SELECT DISTINCT u.user_id, u.dept_id, u.user_name, u.nick_name, u.email, u.phone_number, u.status, u.create_time, u.user_type, u.company, u.company_id
	    FROM sys_user u
		LEFT JOIN sys_dept d ON u.dept_id = d.dept_id
		LEFT JOIN sys_user_role ur ON u.user_id = ur.user_id
		LEFT JOIN sys_role r ON r.role_id = ur.role_id
	    WHERE u.del_flag = '0' AND (r.role_id != #{roleId} OR r.role_id IS NULL)
	    AND u.user_id NOT IN (SELECT u.user_id FROM sys_user u INNER JOIN sys_user_role ur ON u.user_id = ur.user_id AND ur.role_id = #{roleId})
	    <if test="userName != null and userName != ''">
			AND u.user_name LIKE CONCAT('%', #{userName}::TEXT, '%')
		</if>
		<if test="phoneNumber != null and phoneNumber != ''">
			AND u.phone_number LIKE CONCAT('%', #{phoneNumber}::TEXT, '%')
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>
	
	<select id="selectUserByUserName" parameterType="String" resultMap="SysUserResult">
	    <include refid="selectUserVo"/>
		WHERE u.user_name = #{userName} AND u.del_flag = '0'
	</select>
	
	<select id="selectUserById" parameterType="Long" resultMap="SysUserResult">
		<include refid="selectUserVo"/>
		WHERE u.user_id = #{userId}
	</select>

	<select id="checkUserNameUnique" parameterType="String" resultMap="SysUserResult">
		SELECT user_id, user_name FROM sys_user WHERE user_name = #{userName} and del_flag = '0' limit 1
	</select>
	
	<select id="checkPhoneUnique" parameterType="String" resultMap="SysUserResult">
		SELECT user_id, phone_number FROM sys_user WHERE phone_number = #{phoneNumber} and del_flag = '0' limit 1
	</select>
	
	<select id="checkEmailUnique" parameterType="String" resultMap="SysUserResult">
		SELECT user_id, email FROM sys_user WHERE email = #{email} AND del_flag = '0' LIMIT 1
	</select>

    <select id="selectUserByMobile" resultMap="SysUserResult">
		<include refid="selectUserVo"/> WHERE u.phone_number = #{mobile} AND u.del_flag = '0'
	</select>

    <select id="getUserNickName" resultType="java.lang.String">
		SELECT nick_name FROM sys_user WHERE user_id = #{userId}
	</select>

    <insert id="insertUser" parameterType="com.ruoyi.common.core.domain.entity.SysUser" useGeneratedKeys="true" keyProperty="userId">
 		INSERT INTO sys_user(
 			<if test="userId != null and userId != 0">user_id,</if>
 			<if test="deptId != null and deptId != 0">dept_id,</if>
 			<if test="userName != null and userName != ''">user_name,</if>
 			<if test="nickName != null and nickName != ''">nick_name,</if>
 			<if test="email != null and email != ''">email,</if>
 			<if test="avatar != null and avatar != ''">avatar,</if>
 			<if test="phoneNumber != null and phoneNumber != ''">phone_number,</if>
 			<if test="sex != null and sex != ''">sex,</if>
 			<if test="password != null and password != ''">password,</if>
 			<if test="status != null and status != ''">status,</if>
 			<if test="createBy != null and createBy != ''">create_by,</if>
			<if test="remark != null and remark != ''">remark,</if>
			<if test="userType != null and userType != ''">user_type,</if>
			<if test="company != null and company != ''">company,</if>
			<if test="companyId != null and companyId != ''">company_id,</if>
 			create_time
 		) VALUES (
 			<if test="userId != null and userId != ''">#{userId},</if>
 			<if test="deptId != null and deptId != ''">#{deptId},</if>
 			<if test="userName != null and userName != ''">#{userName},</if>
 			<if test="nickName != null and nickName != ''">#{nickName},</if>
 			<if test="email != null and email != ''">#{email},</if>
 			<if test="avatar != null and avatar != ''">#{avatar},</if>
 			<if test="phoneNumber != null and phoneNumber != ''">#{phoneNumber},</if>
 			<if test="sex != null and sex != ''">#{sex},</if>
 			<if test="password != null and password != ''">#{password},</if>
 			<if test="status != null and status != ''">#{status},</if>
 			<if test="createBy != null and createBy != ''">#{createBy},</if>
 			<if test="remark != null and remark != ''">#{remark},</if>
			<if test="userType != null and userType != ''">#{userType},</if>
			<if test="company != null and company != ''">#{company},</if>
			<if test="companyId != null and companyId != ''">#{companyId},</if>
 			NOW()
 		)
	</insert>
	
	<update id="updateUser" parameterType="com.ruoyi.common.core.domain.entity.SysUser">
 		UPDATE sys_user
 		<set>
 			<if test="deptId != null and deptId != 0">dept_id = #{deptId},</if>
 			<if test="userName != null and userName != ''">user_name = #{userName},</if>
 			<if test="nickName != null and nickName != ''">nick_name = #{nickName},</if>
 			<if test="email != null ">email = #{email},</if>
 			<if test="phoneNumber != null ">phone_number = #{phoneNumber},</if>
 			<if test="sex != null and sex != ''">sex = #{sex},</if>
 			<if test="avatar != null and avatar != ''">avatar = #{avatar},</if>
 			<if test="password != null and password != ''">"password" = #{password},</if>
 			<if test="status != null and status != ''">status = #{status},</if>
 			<if test="loginIp != null and loginIp != ''">login_ip = #{loginIp},</if>
 			<if test="loginDate != null">login_date = #{loginDate},</if>
 			<if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
 			<if test="remark != null">remark = #{remark},</if>
			<if test="userType != null and userType != ''">user_type = #{userType},</if>
			<if test="company != null and company != ''">company = #{company},</if>
			<if test="companyId != null and companyId != ''">company_id = #{companyId},</if>
 			update_time = NOW()
 		</set>
 		WHERE user_id = #{userId}
	</update>
	
	<update id="updateUserStatus" parameterType="com.ruoyi.common.core.domain.entity.SysUser">
 		UPDATE sys_user SET status = #{status} WHERE user_id = #{userId}
	</update>
	
	<update id="updateUserAvatar" parameterType="com.ruoyi.common.core.domain.entity.SysUser">
		UPDATE sys_user SET avatar = #{avatar} WHERE user_name = #{userName}
	</update>
	
	<update id="resetUserPwd" parameterType="com.ruoyi.common.core.domain.entity.SysUser">
		UPDATE sys_user SET password = #{password} WHERE user_name = #{userName}
	</update>

	<update id="updatePwd">
		UPDATE sys_user SET password = #{password} WHERE user_id = #{userId}
	</update>

	<delete id="deleteUserById" parameterType="Long">
		UPDATE sys_user SET del_flag = '1' WHERE user_id = #{userId}
 	</delete>
 	
 	<delete id="deleteUserByIds" parameterType="Long">
 		UPDATE sys_user SET del_flag = '1' WHERE user_id IN
 		<foreach collection="userIds" item="userId" open="(" separator="," close=")">
 			#{userId}
        </foreach> 
 	</delete>
	
</mapper> 